let($fa=2.000000, $fn=0, $fs=0.150000) let($fa=5.000000, $fn=0, $fs=1.000000) union() { intersection() { intersection() { translate(v=[0.118785, 0.754870, 0.000000]) multmatrix(m=[[0.973641, -0.160201, 0.162355, 0.000000], [-0.160201, 0.026359, 0.986732, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.751209, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.118785, 0.754870, 0.000000]) multmatrix(m=[[0.973641, -0.160201, 0.162355, 0.000000], [-0.160201, 0.026359, 0.986732, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.240748, 1.496112, 0.000000]) multmatrix(m=[[0.973053, -0.160104, 0.165897, 0.000000], [-0.163696, 0.026934, 0.986137, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.240748, 1.496112, 0.000000]) multmatrix(m=[[0.972465, -0.160008, 0.169439, 0.000000], [-0.167191, 0.027509, 0.985541, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.738397, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.240748, 1.496112, 0.000000]) multmatrix(m=[[0.973053, -0.160104, 0.165897, 0.000000], [-0.163696, 0.026934, 0.986137, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.365861, 2.223833, 0.000000]) multmatrix(m=[[0.971835, -0.159904, 0.173071, 0.000000], [-0.170775, 0.028099, 0.984902, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.365861, 2.223833, 0.000000]) multmatrix(m=[[0.971205, -0.159800, 0.176703, 0.000000], [-0.174358, 0.028689, 0.984264, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.725724, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.365861, 2.223833, 0.000000]) multmatrix(m=[[0.971835, -0.159904, 0.173071, 0.000000], [-0.170775, 0.028099, 0.984902, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.494099, 2.938137, 0.000000]) multmatrix(m=[[0.970531, -0.159690, 0.180427, 0.000000], [-0.178033, 0.029293, 0.983581, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.494099, 2.938137, 0.000000]) multmatrix(m=[[0.969857, -0.159579, 0.184151, 0.000000], [-0.181707, 0.029898, 0.982898, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.713190, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.494099, 2.938137, 0.000000]) multmatrix(m=[[0.970531, -0.159690, 0.180427, 0.000000], [-0.178033, 0.029293, 0.983581, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.625433, 3.639130, 0.000000]) multmatrix(m=[[0.969136, -0.159460, 0.187969, 0.000000], [-0.185475, 0.030518, 0.982167, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.625433, 3.639130, 0.000000]) multmatrix(m=[[0.968415, -0.159341, 0.191788, 0.000000], [-0.189244, 0.031138, 0.981436, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.700797, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.625433, 3.639130, 0.000000]) multmatrix(m=[[0.969136, -0.159460, 0.187969, 0.000000], [-0.185475, 0.030518, 0.982167, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.759838, 4.326918, 0.000000]) multmatrix(m=[[0.967644, -0.159214, 0.195704, 0.000000], [-0.193108, 0.031774, 0.980655, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.759838, 4.326918, 0.000000]) multmatrix(m=[[0.966873, -0.159088, 0.199621, 0.000000], [-0.196972, 0.032409, 0.979873, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.688546, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.759838, 4.326918, 0.000000]) multmatrix(m=[[0.967644, -0.159214, 0.195704, 0.000000], [-0.193108, 0.031774, 0.980655, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.897286, 5.001606, 0.000000]) multmatrix(m=[[0.966048, -0.158952, 0.203637, 0.000000], [-0.200935, 0.033062, 0.979038, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.897286, 5.001606, 0.000000]) multmatrix(m=[[0.965224, -0.158816, 0.207653, 0.000000], [-0.204898, 0.033714, 0.978202, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.676438, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.897286, 5.001606, 0.000000]) multmatrix(m=[[0.966048, -0.158952, 0.203637, 0.000000], [-0.200935, 0.033062, 0.979038, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.037750, 5.663300, 0.000000]) multmatrix(m=[[0.964343, -0.158671, 0.211772, 0.000000], [-0.208963, 0.034382, 0.977310, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.037750, 5.663300, 0.000000]) multmatrix(m=[[0.963463, -0.158526, 0.215891, 0.000000], [-0.213027, 0.035051, 0.976417, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.664475, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.037750, 5.663300, 0.000000]) multmatrix(m=[[0.964343, -0.158671, 0.211772, 0.000000], [-0.208963, 0.034382, 0.977310, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.181205, 6.312104, 0.000000]) multmatrix(m=[[0.962522, -0.158372, 0.220116, 0.000000], [-0.217196, 0.035737, 0.975464, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.181205, 6.312104, 0.000000]) multmatrix(m=[[0.961581, -0.158217, 0.224340, 0.000000], [-0.221364, 0.036423, 0.974511, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.652657, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.181205, 6.312104, 0.000000]) multmatrix(m=[[0.962522, -0.158372, 0.220116, 0.000000], [-0.217196, 0.035737, 0.975464, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.327622, 6.948125, 0.000000]) multmatrix(m=[[0.960577, -0.158052, 0.228673, 0.000000], [-0.225639, 0.037126, 0.973493, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.327622, 6.948125, 0.000000]) multmatrix(m=[[0.959573, -0.157886, 0.233006, 0.000000], [-0.229914, 0.037830, 0.972475, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.640986, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.327622, 6.948125, 0.000000]) multmatrix(m=[[0.960577, -0.158052, 0.228673, 0.000000], [-0.225639, 0.037126, 0.973493, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.476975, 7.571469, 0.000000]) multmatrix(m=[[0.958501, -0.157710, 0.237449, 0.000000], [-0.234299, 0.038551, 0.971389, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.476975, 7.571469, 0.000000]) multmatrix(m=[[0.957429, -0.157534, 0.241893, 0.000000], [-0.238683, 0.039273, 0.970303, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.629464, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.476975, 7.571469, 0.000000]) multmatrix(m=[[0.958501, -0.157710, 0.237449, 0.000000], [-0.234299, 0.038551, 0.971389, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.629238, 8.182240, 0.000000]) multmatrix(m=[[0.956286, -0.157346, 0.246450, 0.000000], [-0.243180, 0.040012, 0.969144, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.629238, 8.182240, 0.000000]) multmatrix(m=[[0.955142, -0.157157, 0.251007, 0.000000], [-0.247676, 0.040752, 0.967985, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.618092, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.629238, 8.182240, 0.000000]) multmatrix(m=[[0.956286, -0.157346, 0.246450, 0.000000], [-0.243180, 0.040012, 0.969144, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.784383, 8.780544, 0.000000]) multmatrix(m=[[0.953923, -0.156957, 0.255680, 0.000000], [-0.252288, 0.041511, 0.966749, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.784383, 8.780544, 0.000000]) multmatrix(m=[[0.952703, -0.156756, 0.260353, 0.000000], [-0.256899, 0.042270, 0.965513, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.606871, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.784383, 8.780544, 0.000000]) multmatrix(m=[[0.953923, -0.156957, 0.255680, 0.000000], [-0.252288, 0.041511, 0.966749, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.942384, 9.366486, 0.000000]) multmatrix(m=[[0.951403, -0.156542, 0.265145, 0.000000], [-0.261627, 0.043048, 0.964196, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.942384, 9.366486, 0.000000]) multmatrix(m=[[0.950103, -0.156328, 0.269937, 0.000000], [-0.266356, 0.043826, 0.962878, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.595804, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.942384, 9.366486, 0.000000]) multmatrix(m=[[0.951403, -0.156542, 0.265145, 0.000000], [-0.261627, 0.043048, 0.964196, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.103214, 9.940173, 0.000000]) multmatrix(m=[[0.948717, -0.156100, 0.274851, 0.000000], [-0.271204, 0.044623, 0.961473, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.103214, 9.940173, 0.000000]) multmatrix(m=[[0.947331, -0.155872, 0.279764, 0.000000], [-0.276052, 0.045421, 0.960069, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.584892, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.103214, 9.940173, 0.000000]) multmatrix(m=[[0.948717, -0.156100, 0.274851, 0.000000], [-0.271204, 0.044623, 0.961473, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.266846, 10.501709, 0.000000]) multmatrix(m=[[0.945854, -0.155629, 0.284802, 0.000000], [-0.281023, 0.046239, 0.958572, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.266846, 10.501709, 0.000000]) multmatrix(m=[[0.944377, -0.155386, 0.289839, 0.000000], [-0.285993, 0.047057, 0.957075, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.574136, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.266846, 10.501709, 0.000000]) multmatrix(m=[[0.945854, -0.155629, 0.284802, 0.000000], [-0.281023, 0.046239, 0.958572, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.433253, 11.051200, 0.000000]) multmatrix(m=[[0.942804, -0.155127, 0.295003, 0.000000], [-0.291089, 0.047895, 0.955481, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.433253, 11.051200, 0.000000]) multmatrix(m=[[0.941231, -0.154868, 0.300166, 0.000000], [-0.296184, 0.048734, 0.953887, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.563538, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.433253, 11.051200, 0.000000]) multmatrix(m=[[0.942804, -0.155127, 0.295003, 0.000000], [-0.291089, 0.047895, 0.955481, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.602408, 11.588752, 0.000000]) multmatrix(m=[[0.939556, -0.154593, 0.305459, 0.000000], [-0.301406, 0.049593, 0.952189, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.602408, 11.588752, 0.000000]) multmatrix(m=[[0.937881, -0.154317, 0.310751, 0.000000], [-0.306628, 0.050452, 0.950491, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.553101, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.602408, 11.588752, 0.000000]) multmatrix(m=[[0.939556, -0.154593, 0.305459, 0.000000], [-0.301406, 0.049593, 0.952189, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.774285, 12.114470, 0.000000]) multmatrix(m=[[0.936097, -0.154024, 0.316174, 0.000000], [-0.311979, 0.051333, 0.948684, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.774285, 12.114470, 0.000000]) multmatrix(m=[[0.934314, -0.153730, 0.321597, 0.000000], [-0.317331, 0.052213, 0.946877, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.542826, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.774285, 12.114470, 0.000000]) multmatrix(m=[[0.936097, -0.154024, 0.316174, 0.000000], [-0.311979, 0.051333, 0.948684, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.948856, 12.628460, 0.000000]) multmatrix(m=[[0.932416, -0.153418, 0.327153, 0.000000], [-0.322813, 0.053115, 0.944953, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.948856, 12.628460, 0.000000]) multmatrix(m=[[0.930518, -0.153106, 0.332709, 0.000000], [-0.328295, 0.054017, 0.943029, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.532716, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.948856, 12.628460, 0.000000]) multmatrix(m=[[0.932416, -0.153418, 0.327153, 0.000000], [-0.322813, 0.053115, 0.944953, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.126096, 13.130827, 0.000000]) multmatrix(m=[[0.928498, -0.152773, 0.338400, 0.000000], [-0.333910, 0.054941, 0.940983, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.126096, 13.130827, 0.000000]) multmatrix(m=[[0.926479, -0.152441, 0.344090, 0.000000], [-0.339525, 0.055865, 0.938937, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.522772, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.126096, 13.130827, 0.000000]) multmatrix(m=[[0.928498, -0.152773, 0.338400, 0.000000], [-0.333910, 0.054941, 0.940983, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.305976, 13.621676, 0.000000]) multmatrix(m=[[0.924332, -0.152088, 0.349917, 0.000000], [-0.345274, 0.056811, 0.936760, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.305976, 13.621676, 0.000000]) multmatrix(m=[[0.922184, -0.151735, 0.355743, 0.000000], [-0.351024, 0.057757, 0.934584, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.512996, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.305976, 13.621676, 0.000000]) multmatrix(m=[[0.924332, -0.152088, 0.349917, 0.000000], [-0.345274, 0.056811, 0.936760, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.488471, 14.101113, 0.000000]) multmatrix(m=[[0.919901, -0.151359, 0.361707, 0.000000], [-0.356908, 0.058725, 0.932270, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.488471, 14.101113, 0.000000]) multmatrix(m=[[0.917618, -0.150983, 0.367671, 0.000000], [-0.362793, 0.059693, 0.929956, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.503391, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.488471, 14.101113, 0.000000]) multmatrix(m=[[0.919901, -0.151359, 0.361707, 0.000000], [-0.356908, 0.058725, 0.932270, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.673553, 14.569244, 0.000000]) multmatrix(m=[[0.913925, -0.150376, 0.376869, 0.000000], [-0.371869, 0.061187, 0.926213, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.673553, 14.569244, 0.000000]) multmatrix(m=[[0.910232, -0.149768, 0.386067, 0.000000], [-0.380945, 0.062680, 0.922471, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.978638, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.673553, 14.569244, 0.000000]) multmatrix(m=[[0.913925, -0.150376, 0.376869, 0.000000], [-0.371869, 0.061187, 0.926213, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[4.051373, 15.472009, 0.000000]) multmatrix(m=[[0.904755, -0.148867, 0.398827, 0.000000], [-0.393535, 0.064752, 0.916921, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[4.051373, 15.472009, 0.000000]) multmatrix(m=[[0.899279, -0.147966, 0.411587, 0.000000], [-0.406126, 0.066823, 0.911371, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.942323, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[4.051373, 15.472009, 0.000000]) multmatrix(m=[[0.904755, -0.148867, 0.398827, 0.000000], [-0.393535, 0.064752, 0.916921, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[4.439220, 16.330814, 0.000000]) multmatrix(m=[[0.893112, -0.146951, 0.424900, 0.000000], [-0.419262, 0.068985, 0.905121, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[4.439220, 16.330814, 0.000000]) multmatrix(m=[[0.886945, -0.145936, 0.438213, 0.000000], [-0.432399, 0.071146, 0.898871, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.907460, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[4.439220, 16.330814, 0.000000]) multmatrix(m=[[0.893112, -0.146951, 0.424900, 0.000000], [-0.419262, 0.068985, 0.905121, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[4.836881, 17.146504, 0.000000]) multmatrix(m=[[0.880015, -0.144796, 0.452068, 0.000000], [-0.446070, 0.073396, 0.891848, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[4.836881, 17.146504, 0.000000]) multmatrix(m=[[0.873086, -0.143656, 0.465923, 0.000000], [-0.459742, 0.075645, 0.884825, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.874091, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[4.836881, 17.146504, 0.000000]) multmatrix(m=[[0.880015, -0.144796, 0.452068, 0.000000], [-0.446070, 0.073396, 0.891848, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[5.244141, 17.919922, 0.000000]) multmatrix(m=[[0.865317, -0.142378, 0.480298, 0.000000], [-0.473926, 0.077979, 0.876952, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[5.244141, 17.919922, 0.000000]) multmatrix(m=[[0.857548, -0.141099, 0.494673, 0.000000], [-0.488110, 0.080313, 0.869079, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.842260, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[5.244141, 17.919922, 0.000000]) multmatrix(m=[[0.865317, -0.142378, 0.480298, 0.000000], [-0.473926, 0.077979, 0.876952, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[5.660784, 18.651912, 0.000000]) multmatrix(m=[[0.848863, -0.139670, 0.509534, 0.000000], [-0.502773, 0.082725, 0.860277, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[5.660784, 18.651912, 0.000000]) multmatrix(m=[[0.840179, -0.138242, 0.524394, 0.000000], [-0.517437, 0.085138, 0.851476, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.812010, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[5.660784, 18.651912, 0.000000]) multmatrix(m=[[0.848863, -0.139670, 0.509534, 0.000000], [-0.502773, 0.082725, 0.860277, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[6.086597, 19.343319, 0.000000]) multmatrix(m=[[0.830501, -0.136649, 0.539690, 0.000000], [-0.532530, 0.087621, 0.841668, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[6.086597, 19.343319, 0.000000]) multmatrix(m=[[0.820823, -0.135057, 0.554986, 0.000000], [-0.547623, 0.090105, 0.831860, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.783386, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[6.086597, 19.343319, 0.000000]) multmatrix(m=[[0.830501, -0.136649, 0.539690, 0.000000], [-0.532530, 0.087621, 0.841668, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[6.521366, 19.994986, 0.000000]) multmatrix(m=[[0.810078, -0.133289, 0.570651, 0.000000], [-0.563080, 0.092648, 0.820971, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[6.521366, 19.994986, 0.000000]) multmatrix(m=[[0.799334, -0.131521, 0.586317, 0.000000], [-0.578538, 0.095192, 0.810082, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.756432, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[6.521366, 19.994986, 0.000000]) multmatrix(m=[[0.810078, -0.133289, 0.570651, 0.000000], [-0.563080, 0.092648, 0.820971, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[6.964874, 20.607758, 0.000000]) multmatrix(m=[[0.787456, -0.129567, 0.602267, 0.000000], [-0.594277, 0.097781, 0.798044, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[6.964874, 20.607758, 0.000000]) multmatrix(m=[[0.775578, -0.127612, 0.618218, 0.000000], [-0.610016, 0.100371, 0.786007, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.731190, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[6.964874, 20.607758, 0.000000]) multmatrix(m=[[0.787456, -0.129567, 0.602267, 0.000000], [-0.594277, 0.097781, 0.798044, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[7.416909, 21.182477, 0.000000]) multmatrix(m=[[0.762511, -0.125462, 0.634350, 0.000000], [-0.625934, 0.102990, 0.772764, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[7.416909, 21.182477, 0.000000]) multmatrix(m=[[0.749444, -0.123312, 0.650483, 0.000000], [-0.641852, 0.105609, 0.759521, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.707699, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[7.416909, 21.182477, 0.000000]) multmatrix(m=[[0.762511, -0.125462, 0.634350, 0.000000], [-0.625934, 0.102990, 0.772764, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[7.877254, 21.719990, 0.000000]) multmatrix(m=[[0.735148, -0.120960, 0.666674, 0.000000], [-0.657829, 0.108238, 0.745032, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[7.877254, 21.719990, 0.000000]) multmatrix(m=[[0.720851, -0.118608, 0.682866, 0.000000], [-0.673806, 0.110867, 0.730543, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.685994, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[7.877254, 21.719990, 0.000000]) multmatrix(m=[[0.735148, -0.120960, 0.666674, 0.000000], [-0.657829, 0.108238, 0.745032, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[8.345697, 22.221138, 0.000000]) multmatrix(m=[[0.705305, -0.116050, 0.698978, 0.000000], [-0.689704, 0.113483, 0.714788, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[8.345697, 22.221138, 0.000000]) multmatrix(m=[[0.689758, -0.113492, 0.715090, 0.000000], [-0.705602, 0.116099, 0.699033, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.666105, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[8.345697, 22.221138, 0.000000]) multmatrix(m=[[0.705305, -0.116050, 0.698978, 0.000000], [-0.689704, 0.113483, 0.714788, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[8.822021, 22.686768, 0.000000]) multmatrix(m=[[0.672968, -0.110729, 0.730966, 0.000000], [-0.721268, 0.118676, 0.682016, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[8.822021, 22.686768, 0.000000]) multmatrix(m=[[0.656177, -0.107966, 0.746843, 0.000000], [-0.736935, 0.121254, 0.665000, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.648050, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[8.822021, 22.686768, 0.000000]) multmatrix(m=[[0.672968, -0.110729, 0.730966, 0.000000], [-0.721268, 0.118676, 0.682016, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[9.306014, 23.117721, 0.000000]) multmatrix(m=[[0.638176, -0.105004, 0.762320, 0.000000], [-0.752206, 0.123767, 0.646757, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[9.306014, 23.117721, 0.000000]) multmatrix(m=[[0.620176, -0.102043, 0.777798, 0.000000], [-0.767478, 0.126279, 0.628515, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.631842, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[9.306014, 23.117721, 0.000000]) multmatrix(m=[[0.638176, -0.105004, 0.762320, 0.000000], [-0.752206, 0.123767, 0.646757, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[9.797459, 23.514843, 0.000000]) multmatrix(m=[[0.601032, -0.098893, 0.792706, 0.000000], [-0.782188, 0.128700, 0.609114, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[9.797459, 23.514843, 0.000000]) multmatrix(m=[[0.581888, -0.095743, 0.807613, 0.000000], [-0.796898, 0.131120, 0.589712, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.617478, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[9.797459, 23.514843, 0.000000]) multmatrix(m=[[0.601032, -0.098893, 0.792706, 0.000000], [-0.782188, 0.128700, 0.609114, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[10.296142, 23.878977, 0.000000]) multmatrix(m=[[0.561701, -0.092421, 0.821785, 0.000000], [-0.810882, 0.133421, 0.569254, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[10.296142, 23.878977, 0.000000]) multmatrix(m=[[0.541514, -0.089100, 0.835957, 0.000000], [-0.824866, 0.135722, 0.548795, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.604944, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[10.296142, 23.878977, 0.000000]) multmatrix(m=[[0.561701, -0.092421, 0.821785, 0.000000], [-0.810882, 0.133421, 0.569254, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[10.801849, 24.210968, 0.000000]) multmatrix(m=[[0.520417, -0.085628, 0.849235, 0.000000], [-0.837968, 0.137878, 0.527414, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[10.801849, 24.210968, 0.000000]) multmatrix(m=[[0.499319, -0.082157, 0.862514, 0.000000], [-0.851071, 0.140034, 0.506033, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.594212, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[10.801849, 24.210968, 0.000000]) multmatrix(m=[[0.520417, -0.085628, 0.849235, 0.000000], [-0.837968, 0.137878, 0.527414, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[11.314366, 24.511659, 0.000000]) multmatrix(m=[[0.477473, -0.078563, 0.874761, 0.000000], [-0.863155, 0.142022, 0.483893, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[11.314366, 24.511659, 0.000000]) multmatrix(m=[[0.455627, -0.074968, 0.887008, 0.000000], [-0.875240, 0.144010, 0.461753, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.585238, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[11.314366, 24.511659, 0.000000]) multmatrix(m=[[0.477473, -0.078563, 0.874761, 0.000000], [-0.863155, 0.142022, 0.483893, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[11.833477, 24.781895, 0.000000]) multmatrix(m=[[0.433217, -0.071281, 0.898111, 0.000000], [-0.886195, 0.145813, 0.439042, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[11.833477, 24.781895, 0.000000]) multmatrix(m=[[0.410808, -0.067594, 0.909213, 0.000000], [-0.897150, 0.147615, 0.416331, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577963, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[11.833477, 24.781895, 0.000000]) multmatrix(m=[[0.433217, -0.071281, 0.898111, 0.000000], [-0.886195, 0.145813, 0.439042, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[12.358968, 25.022519, 0.000000]) multmatrix(m=[[0.388036, -0.063847, 0.919087, 0.000000], [-0.906893, 0.149219, 0.393254, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[12.358968, 25.022519, 0.000000]) multmatrix(m=[[0.365264, -0.060100, 0.928962, 0.000000], [-0.916637, 0.150822, 0.370176, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.572313, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[12.358968, 25.022519, 0.000000]) multmatrix(m=[[0.388036, -0.063847, 0.919087, 0.000000], [-0.906893, 0.149219, 0.393254, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[12.890625, 25.234375, 0.000000]) multmatrix(m=[[0.342340, -0.056328, 0.937559, 0.000000], [-0.925120, 0.152218, 0.346943, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[12.890625, 25.234375, 0.000000]) multmatrix(m=[[0.319415, -0.052556, 0.946156, 0.000000], [-0.933603, 0.153613, 0.323710, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.568202, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[12.890625, 25.234375, 0.000000]) multmatrix(m=[[0.342340, -0.056328, 0.937559, 0.000000], [-0.925120, 0.152218, 0.346943, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[13.428233, 25.418308, 0.000000]) multmatrix(m=[[0.296546, -0.048793, 0.953462, 0.000000], [-0.940812, 0.154799, 0.300533, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[13.428233, 25.418308, 0.000000]) multmatrix(m=[[0.273676, -0.045030, 0.960767, 0.000000], [-0.948020, 0.155986, 0.277355, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.565531, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[13.428233, 25.418308, 0.000000]) multmatrix(m=[[0.296546, -0.048793, 0.953462, 0.000000], [-0.940812, 0.154799, 0.300533, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[13.971577, 25.575161, 0.000000]) multmatrix(m=[[0.251058, -0.041309, 0.966800, 0.000000], [-0.953973, 0.156965, 0.254434, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[13.971577, 25.575161, 0.000000]) multmatrix(m=[[0.228440, -0.037587, 0.972832, 0.000000], [-0.959925, 0.157944, 0.231512, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.564194, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[13.971577, 25.575161, 0.000000]) multmatrix(m=[[0.251058, -0.041309, 0.966800, 0.000000], [-0.953973, 0.156965, 0.254434, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[14.520442, 25.705779, 0.000000]) multmatrix(m=[[0.206256, -0.033937, 0.977639, 0.000000], [-0.964668, 0.158725, 0.209029, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[14.520442, 25.705779, 0.000000]) multmatrix(m=[[0.184071, -0.030287, 0.982446, 0.000000], [-0.969411, 0.159505, 0.186546, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.564075, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[14.520442, 25.705779, 0.000000]) multmatrix(m=[[0.206256, -0.033937, 0.977639, 0.000000], [-0.964668, 0.158725, 0.209029, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[15.074615, 25.811005, 0.000000]) multmatrix(m=[[0.162478, -0.026734, 0.986100, 0.000000], [-0.973017, 0.160099, 0.164663, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[15.074615, 25.811005, 0.000000]) multmatrix(m=[[0.140886, -0.023181, 0.989754, 0.000000], [-0.976623, 0.160692, 0.142780, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.565055, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[15.074615, 25.811005, 0.000000]) multmatrix(m=[[0.162478, -0.026734, 0.986100, 0.000000], [-0.973017, 0.160099, 0.164663, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[15.633881, 25.891683, 0.000000]) multmatrix(m=[[0.120017, -0.019747, 0.992347, 0.000000], [-0.979181, 0.161113, 0.121631, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[15.633881, 25.891683, 0.000000]) multmatrix(m=[[0.099149, -0.016314, 0.994939, 0.000000], [-0.981738, 0.161533, 0.100482, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.567013, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[15.633881, 25.891683, 0.000000]) multmatrix(m=[[0.120017, -0.019747, 0.992347, 0.000000], [-0.979181, 0.161113, 0.121631, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[16.198025, 25.948658, 0.000000]) multmatrix(m=[[0.079112, -0.013017, 0.996573, 0.000000], [-0.983350, 0.161799, 0.080176, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[16.198025, 25.948658, 0.000000]) multmatrix(m=[[0.059075, -0.009720, 0.998206, 0.000000], [-0.984962, 0.162064, 0.059869, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.569829, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[16.198025, 25.948658, 0.000000]) multmatrix(m=[[0.079112, -0.013017, 0.996573, 0.000000], [-0.983350, 0.161799, 0.080176, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[16.766832, 25.982773, 0.000000]) multmatrix(m=[[0.039949, -0.006573, 0.998992, 0.000000], [-0.985738, 0.162192, 0.040486, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[16.766832, 25.982773, 0.000000]) multmatrix(m=[[0.020822, -0.003426, 0.999777, 0.000000], [-0.986513, 0.162319, 0.021102, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.573384, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[16.766832, 25.982773, 0.000000]) multmatrix(m=[[0.039949, -0.006573, 0.998992, 0.000000], [-0.985738, 0.162192, 0.040486, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[17.340088, 25.994873, 0.000000]) multmatrix(m=[[0.002662, -0.000438, 0.999827, 0.000000], [-0.986562, 0.162327, 0.002698, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[17.340088, 25.994873, 0.000000]) multmatrix(m=[[-0.015499, 0.002550, 0.999877, 0.000000], [-0.986611, 0.162335, -0.015707, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577562, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[17.340088, 25.994873, 0.000000]) multmatrix(m=[[0.002662, -0.000438, 0.999827, 0.000000], [-0.986562, 0.162327, 0.002698, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[17.917578, 25.985801, 0.000000]) multmatrix(m=[[-0.032661, 0.005374, 0.999301, 0.000000], [-0.986042, 0.162242, -0.033100, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[17.917578, 25.985801, 0.000000]) multmatrix(m=[[-0.049823, 0.008198, 0.998724, 0.000000], [-0.985474, 0.162148, -0.050492, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.582253, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[17.917578, 25.985801, 0.000000]) multmatrix(m=[[-0.032661, 0.005374, 0.999301, 0.000000], [-0.986042, 0.162242, -0.033100, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[18.499088, 25.956402, 0.000000]) multmatrix(m=[[-0.065972, 0.010855, 0.997628, 0.000000], [-0.984391, 0.161970, -0.066859, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[18.499088, 25.956402, 0.000000]) multmatrix(m=[[-0.082122, 0.013512, 0.996531, 0.000000], [-0.983309, 0.161792, -0.083226, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.587353, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[18.499088, 25.956402, 0.000000]) multmatrix(m=[[-0.065972, 0.010855, 0.997628, 0.000000], [-0.984391, 0.161970, -0.066859, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[19.084404, 25.907519, 0.000000]) multmatrix(m=[[-0.097261, 0.016003, 0.995011, 0.000000], [-0.981809, 0.161545, -0.098569, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[19.084404, 25.907519, 0.000000]) multmatrix(m=[[-0.112400, 0.018494, 0.993491, 0.000000], [-0.980310, 0.161298, -0.113911, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.592764, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[19.084404, 25.907519, 0.000000]) multmatrix(m=[[-0.097261, 0.016003, 0.995011, 0.000000], [-0.981809, 0.161545, -0.098569, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[19.673309, 25.839996, 0.000000]) multmatrix(m=[[-0.126543, 0.020821, 0.991637, 0.000000], [-0.978481, 0.160997, -0.128245, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[19.673309, 25.839996, 0.000000]) multmatrix(m=[[-0.140686, 0.023148, 0.989784, 0.000000], [-0.976651, 0.160697, -0.142578, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.598395, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[19.673309, 25.839996, 0.000000]) multmatrix(m=[[-0.126543, 0.020821, 0.991637, 0.000000], [-0.978481, 0.160997, -0.128245, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[20.265591, 25.754678, 0.000000]) multmatrix(m=[[-0.153858, 0.025316, 0.987676, 0.000000], [-0.974572, 0.160354, -0.155927, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[20.265591, 25.754678, 0.000000]) multmatrix(m=[[-0.167029, 0.027483, 0.985569, 0.000000], [-0.972493, 0.160012, -0.169275, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.604162, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[20.265591, 25.754678, 0.000000]) multmatrix(m=[[-0.153858, 0.025316, 0.987676, 0.000000], [-0.974572, 0.160354, -0.155927, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[20.861034, 25.652409, 0.000000]) multmatrix(m=[[-0.179260, 0.029495, 0.983279, 0.000000], [-0.970233, 0.159640, -0.181670, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[20.861034, 25.652409, 0.000000]) multmatrix(m=[[-0.191490, 0.031507, 0.980989, 0.000000], [-0.967973, 0.159269, -0.194065, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.609987, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[20.861034, 25.652409, 0.000000]) multmatrix(m=[[-0.179260, 0.029495, 0.983279, 0.000000], [-0.970233, 0.159640, -0.181670, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[21.459424, 25.534031, 0.000000]) multmatrix(m=[[-0.202816, 0.033371, 0.978578, 0.000000], [-0.965594, 0.158877, -0.205543, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[21.459424, 25.534031, 0.000000]) multmatrix(m=[[-0.214141, 0.035234, 0.976167, 0.000000], [-0.963216, 0.158486, -0.217020, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.615799, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[21.459424, 25.534031, 0.000000]) multmatrix(m=[[-0.202816, 0.033371, 0.978578, 0.000000], [-0.965594, 0.158877, -0.205543, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[22.060547, 25.400391, 0.000000]) multmatrix(m=[[-0.224599, 0.036955, 0.973689, 0.000000], [-0.960771, 0.158084, -0.227619, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[22.060547, 25.400391, 0.000000]) multmatrix(m=[[-0.235057, 0.038676, 0.971212, 0.000000], [-0.958326, 0.157681, -0.238218, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.621533, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[22.060547, 25.400391, 0.000000]) multmatrix(m=[[-0.224599, 0.036955, 0.973689, 0.000000], [-0.960771, 0.158084, -0.227619, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[22.664187, 25.252330, 0.000000]) multmatrix(m=[[-0.244688, 0.040261, 0.968713, 0.000000], [-0.955861, 0.157276, -0.247978, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[22.664187, 25.252330, 0.000000]) multmatrix(m=[[-0.254319, 0.041845, 0.966215, 0.000000], [-0.953395, 0.156870, -0.257739, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.627131, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[22.664187, 25.252330, 0.000000]) multmatrix(m=[[-0.244688, 0.040261, 0.968713, 0.000000], [-0.955861, 0.157276, -0.247978, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[23.270130, 25.090694, 0.000000]) multmatrix(m=[[-0.263162, 0.043300, 0.963735, 0.000000], [-0.950948, 0.156467, -0.266700, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[23.270130, 25.090694, 0.000000]) multmatrix(m=[[-0.272005, 0.044755, 0.961255, 0.000000], [-0.948501, 0.156065, -0.275662, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.632540, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[23.270130, 25.090694, 0.000000]) multmatrix(m=[[-0.263162, 0.043300, 0.963735, 0.000000], [-0.950948, 0.156467, -0.266700, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[23.878162, 24.916327, 0.000000]) multmatrix(m=[[-0.280099, 0.046087, 0.958826, 0.000000], [-0.946105, 0.155670, -0.283865, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[23.878162, 24.916327, 0.000000]) multmatrix(m=[[-0.288193, 0.047419, 0.956398, 0.000000], [-0.943708, 0.155276, -0.292068, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.637711, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[23.878162, 24.916327, 0.000000]) multmatrix(m=[[-0.280099, 0.046087, 0.958826, 0.000000], [-0.946105, 0.155670, -0.283865, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[24.488068, 24.730072, 0.000000]) multmatrix(m=[[-0.295575, 0.048633, 0.954049, 0.000000], [-0.941391, 0.154895, -0.299549, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[24.488068, 24.730072, 0.000000]) multmatrix(m=[[-0.302957, 0.049848, 0.951700, 0.000000], [-0.939073, 0.154513, -0.307030, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.642603, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[24.488068, 24.730072, 0.000000]) multmatrix(m=[[-0.295575, 0.048633, 0.954049, 0.000000], [-0.941391, 0.154895, -0.299549, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[25.099633, 24.532773, 0.000000]) multmatrix(m=[[-0.309662, 0.050951, 0.949454, 0.000000], [-0.936857, 0.154149, -0.313826, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[25.099633, 24.532773, 0.000000]) multmatrix(m=[[-0.316367, 0.052054, 0.947208, 0.000000], [-0.934640, 0.153784, -0.320621, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.647176, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[25.099633, 24.532773, 0.000000]) multmatrix(m=[[-0.309662, 0.050951, 0.949454, 0.000000], [-0.936857, 0.154149, -0.313826, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[25.712643, 24.325275, 0.000000]) multmatrix(m=[[-0.322428, 0.053052, 0.945084, 0.000000], [-0.932545, 0.153439, -0.326763, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[25.712643, 24.325275, 0.000000]) multmatrix(m=[[-0.328489, 0.054049, 0.942960, 0.000000], [-0.930449, 0.153094, -0.332906, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.651396, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[25.712643, 24.325275, 0.000000]) multmatrix(m=[[-0.322428, 0.053052, 0.945084, 0.000000], [-0.932545, 0.153439, -0.326763, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[26.326883, 24.108422, 0.000000]) multmatrix(m=[[-0.333936, 0.054945, 0.940975, 0.000000], [-0.928490, 0.152772, -0.338427, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[26.326883, 24.108422, 0.000000]) multmatrix(m=[[-0.339384, 0.055842, 0.938989, 0.000000], [-0.926531, 0.152450, -0.343947, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.655232, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[26.326883, 24.108422, 0.000000]) multmatrix(m=[[-0.333936, 0.054945, 0.940975, 0.000000], [-0.928490, 0.152772, -0.338427, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[26.942139, 23.883057, 0.000000]) multmatrix(m=[[-0.344244, 0.056641, 0.937155, 0.000000], [-0.924721, 0.152152, -0.348873, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[26.942139, 23.883057, 0.000000]) multmatrix(m=[[-0.349105, 0.057441, 0.935321, 0.000000], [-0.922912, 0.151854, -0.353799, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.658658, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[26.942139, 23.883057, 0.000000]) multmatrix(m=[[-0.344244, 0.056641, 0.937155, 0.000000], [-0.924721, 0.152152, -0.348873, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[27.558196, 23.650024, 0.000000]) multmatrix(m=[[-0.353404, 0.058148, 0.933650, 0.000000], [-0.921263, 0.151583, -0.358156, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[27.558196, 23.650024, 0.000000]) multmatrix(m=[[-0.357703, 0.058856, 0.931979, 0.000000], [-0.919614, 0.151312, -0.362513, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.661650, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[27.558196, 23.650024, 0.000000]) multmatrix(m=[[-0.353404, 0.058148, 0.933650, 0.000000], [-0.921263, 0.151583, -0.358156, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[28.174839, 23.410168, 0.000000]) multmatrix(m=[[-0.361461, 0.059474, 0.930479, 0.000000], [-0.918134, 0.151068, -0.366322, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[28.174839, 23.410168, 0.000000]) multmatrix(m=[[-0.365220, 0.060093, 0.928980, 0.000000], [-0.916654, 0.150825, -0.370131, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.664186, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[28.174839, 23.410168, 0.000000]) multmatrix(m=[[-0.361461, 0.059474, 0.930479, 0.000000], [-0.918134, 0.151068, -0.366322, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[28.791854, 23.164332, 0.000000]) multmatrix(m=[[-0.368457, 0.060625, 0.927659, 0.000000], [-0.915351, 0.150610, -0.373412, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[28.791854, 23.164332, 0.000000]) multmatrix(m=[[-0.371695, 0.061158, 0.926338, 0.000000], [-0.914048, 0.150396, -0.376693, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.666250, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[28.791854, 23.164332, 0.000000]) multmatrix(m=[[-0.368457, 0.060625, 0.927659, 0.000000], [-0.915351, 0.150610, -0.373412, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[29.409027, 22.913361, 0.000000]) multmatrix(m=[[-0.374427, 0.061608, 0.925203, 0.000000], [-0.912928, 0.150211, -0.379461, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[29.409027, 22.913361, 0.000000]) multmatrix(m=[[-0.377159, 0.062057, 0.924067, 0.000000], [-0.911807, 0.150027, -0.382230, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.667825, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[29.409027, 22.913361, 0.000000]) multmatrix(m=[[-0.374427, 0.061608, 0.925203, 0.000000], [-0.912928, 0.150211, -0.379461, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[30.026143, 22.658098, 0.000000]) multmatrix(m=[[-0.379399, 0.062426, 0.923122, 0.000000], [-0.910874, 0.149874, -0.384500, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[30.026143, 22.658098, 0.000000]) multmatrix(m=[[-0.381638, 0.062794, 0.922176, 0.000000], [-0.909941, 0.149720, -0.386770, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.668900, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[30.026143, 22.658098, 0.000000]) multmatrix(m=[[-0.379399, 0.062426, 0.923122, 0.000000], [-0.910874, 0.149874, -0.384500, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[30.642986, 22.399387, 0.000000]) multmatrix(m=[[-0.383396, 0.063083, 0.921425, 0.000000], [-0.909200, 0.149598, -0.388552, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[30.642986, 22.399387, 0.000000]) multmatrix(m=[[-0.385155, 0.063373, 0.920674, 0.000000], [-0.908458, 0.149476, -0.390333, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.669463, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[30.642986, 22.399387, 0.000000]) multmatrix(m=[[-0.383396, 0.063083, 0.921425, 0.000000], [-0.909200, 0.149598, -0.388552, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[31.259344, 22.138073, 0.000000]) multmatrix(m=[[-0.386438, 0.063584, 0.920120, 0.000000], [-0.907912, 0.149386, -0.391635, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[31.259344, 22.138073, 0.000000]) multmatrix(m=[[-0.387722, 0.063795, 0.919566, 0.000000], [-0.907365, 0.149296, -0.392936, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.669508, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[31.259344, 22.138073, 0.000000]) multmatrix(m=[[-0.386438, 0.063584, 0.920120, 0.000000], [-0.907912, 0.149386, -0.391635, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[31.875000, 21.875000, 0.000000]) multmatrix(m=[[-0.388537, 0.063929, 0.919212, 0.000000], [-0.907017, 0.149239, -0.393761, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[31.875000, 21.875000, 0.000000]) multmatrix(m=[[-0.389351, 0.064063, 0.918859, 0.000000], [-0.906668, 0.149181, -0.394587, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.669027, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[31.875000, 21.875000, 0.000000]) multmatrix(m=[[-0.388537, 0.063929, 0.919212, 0.000000], [-0.907017, 0.149239, -0.393761, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[32.489741, 21.611011, 0.000000]) multmatrix(m=[[-0.389699, 0.064120, 0.918707, 0.000000], [-0.906518, 0.149157, -0.394939, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[32.489741, 21.611011, 0.000000]) multmatrix(m=[[-0.390046, 0.064177, 0.918556, 0.000000], [-0.906369, 0.149132, -0.395290, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.668017, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[32.489741, 21.611011, 0.000000]) multmatrix(m=[[-0.389699, 0.064120, 0.918707, 0.000000], [-0.906518, 0.149157, -0.394939, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[33.103352, 21.346951, 0.000000]) multmatrix(m=[[-0.389925, 0.064158, 0.918609, 0.000000], [-0.906421, 0.149141, -0.395168, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[33.103352, 21.346951, 0.000000]) multmatrix(m=[[-0.389804, 0.064138, 0.918662, 0.000000], [-0.906473, 0.149150, -0.395045, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.666476, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[33.103352, 21.346951, 0.000000]) multmatrix(m=[[-0.389925, 0.064158, 0.918609, 0.000000], [-0.906421, 0.149141, -0.395168, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[33.715618, 21.083663, 0.000000]) multmatrix(m=[[-0.389211, 0.064040, 0.918920, 0.000000], [-0.906728, 0.149191, -0.394444, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[33.715618, 21.083663, 0.000000]) multmatrix(m=[[-0.388618, 0.063942, 0.919178, 0.000000], [-0.906982, 0.149233, -0.393843, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.664406, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[33.715618, 21.083663, 0.000000]) multmatrix(m=[[-0.389211, 0.064040, 0.918920, 0.000000], [-0.906728, 0.149191, -0.394444, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[34.326324, 20.821991, 0.000000]) multmatrix(m=[[-0.387546, 0.063766, 0.919641, 0.000000], [-0.907440, 0.149309, -0.392757, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[34.326324, 20.821991, 0.000000]) multmatrix(m=[[-0.386475, 0.063590, 0.920105, 0.000000], [-0.907898, 0.149384, -0.391671, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.661808, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[34.326324, 20.821991, 0.000000]) multmatrix(m=[[-0.387546, 0.063766, 0.919641, 0.000000], [-0.907440, 0.149309, -0.392757, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[34.935257, 20.562780, 0.000000]) multmatrix(m=[[-0.384915, 0.063333, 0.920775, 0.000000], [-0.908558, 0.149493, -0.390090, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[34.935257, 20.562780, 0.000000]) multmatrix(m=[[-0.383355, 0.063077, 0.921445, 0.000000], [-0.909219, 0.149601, -0.388510, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.658688, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[34.935257, 20.562780, 0.000000]) multmatrix(m=[[-0.384915, 0.063333, 0.920775, 0.000000], [-0.908558, 0.149493, -0.390090, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[35.542202, 20.306873, 0.000000]) multmatrix(m=[[-0.381294, 0.062737, 0.922320, 0.000000], [-0.910083, 0.149743, -0.386421, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[35.542202, 20.306873, 0.000000]) multmatrix(m=[[-0.379233, 0.062398, 0.923195, 0.000000], [-0.910946, 0.149885, -0.384332, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.655053, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[35.542202, 20.306873, 0.000000]) multmatrix(m=[[-0.381294, 0.062737, 0.922320, 0.000000], [-0.910083, 0.149743, -0.386421, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[36.146944, 20.055115, 0.000000]) multmatrix(m=[[-0.376655, 0.061974, 0.924274, 0.000000], [-0.912011, 0.150061, -0.381720, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[36.146944, 20.055115, 0.000000]) multmatrix(m=[[-0.374077, 0.061550, 0.925353, 0.000000], [-0.913076, 0.150236, -0.379107, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.650913, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[36.146944, 20.055115, 0.000000]) multmatrix(m=[[-0.376655, 0.061974, 0.924274, 0.000000], [-0.912011, 0.150061, -0.381720, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[36.749268, 19.808350, 0.000000]) multmatrix(m=[[-0.370963, 0.061038, 0.926633, 0.000000], [-0.914339, 0.150444, -0.375951, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[36.749268, 19.808350, 0.000000]) multmatrix(m=[[-0.367848, 0.060525, 0.927914, 0.000000], [-0.915603, 0.150652, -0.372794, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.646279, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[36.749268, 19.808350, 0.000000]) multmatrix(m=[[-0.370963, 0.061038, 0.926633, 0.000000], [-0.914339, 0.150444, -0.375951, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[37.348959, 19.567420, 0.000000]) multmatrix(m=[[-0.364174, 0.059920, 0.929393, 0.000000], [-0.917062, 0.150892, -0.369070, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[37.348959, 19.567420, 0.000000]) multmatrix(m=[[-0.360499, 0.059316, 0.930872, 0.000000], [-0.918521, 0.151132, -0.365347, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.641168, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[37.348959, 19.567420, 0.000000]) multmatrix(m=[[-0.364174, 0.059920, 0.929393, 0.000000], [-0.917062, 0.150892, -0.369070, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[37.945805, 19.333172, 0.000000]) multmatrix(m=[[-0.356239, 0.058615, 0.932543, 0.000000], [-0.920171, 0.151403, -0.361029, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[37.945805, 19.333172, 0.000000]) multmatrix(m=[[-0.351978, 0.057914, 0.934215, 0.000000], [-0.921820, 0.151675, -0.356711, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.635597, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[37.945805, 19.333172, 0.000000]) multmatrix(m=[[-0.356239, 0.058615, 0.932543, 0.000000], [-0.920171, 0.151403, -0.361029, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[38.539588, 19.106448, 0.000000]) multmatrix(m=[[-0.347100, 0.057111, 0.936073, 0.000000], [-0.923653, 0.151976, -0.351767, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[38.539588, 19.106448, 0.000000]) multmatrix(m=[[-0.342223, 0.056309, 0.937930, 0.000000], [-0.925486, 0.152278, -0.346824, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.629586, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[38.539588, 19.106448, 0.000000]) multmatrix(m=[[-0.347100, 0.057111, 0.936073, 0.000000], [-0.923653, 0.151976, -0.351767, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[39.130096, 18.888092, 0.000000]) multmatrix(m=[[-0.336693, 0.055399, 0.939965, 0.000000], [-0.927493, 0.152608, -0.341220, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[39.130096, 18.888092, 0.000000]) multmatrix(m=[[-0.331163, 0.054489, 0.941999, 0.000000], [-0.929501, 0.152938, -0.335616, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.623162, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[39.130096, 18.888092, 0.000000]) multmatrix(m=[[-0.336693, 0.055399, 0.939965, 0.000000], [-0.927493, 0.152608, -0.341220, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[39.717114, 18.678949, 0.000000]) multmatrix(m=[[-0.324943, 0.053466, 0.944197, 0.000000], [-0.931670, 0.153295, -0.329312, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[39.717114, 18.678949, 0.000000]) multmatrix(m=[[-0.318723, 0.052442, 0.946396, 0.000000], [-0.933840, 0.153652, -0.323008, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.616351, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[39.717114, 18.678949, 0.000000]) multmatrix(m=[[-0.324943, 0.053466, 0.944197, 0.000000], [-0.931670, 0.153295, -0.329312, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[40.300426, 18.479862, 0.000000]) multmatrix(m=[[-0.311769, 0.051298, 0.948743, 0.000000], [-0.936156, 0.154033, -0.315961, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[40.300426, 18.479862, 0.000000]) multmatrix(m=[[-0.304815, 0.050154, 0.951090, 0.000000], [-0.938472, 0.154414, -0.308913, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.609188, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[40.300426, 18.479862, 0.000000]) multmatrix(m=[[-0.311769, 0.051298, 0.948743, 0.000000], [-0.936156, 0.154033, -0.315961, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[40.879819, 18.291676, 0.000000]) multmatrix(m=[[-0.297079, 0.048881, 0.953565, 0.000000], [-0.940914, 0.154816, -0.301074, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[40.879819, 18.291676, 0.000000]) multmatrix(m=[[-0.289343, 0.047608, 0.956041, 0.000000], [-0.943356, 0.155218, -0.293234, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.601709, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[40.879819, 18.291676, 0.000000]) multmatrix(m=[[-0.297079, 0.048881, 0.953565, 0.000000], [-0.940914, 0.154816, -0.301074, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[41.455078, 18.115234, 0.000000]) multmatrix(m=[[-0.280775, 0.046198, 0.958618, 0.000000], [-0.945900, 0.155637, -0.284550, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[41.455078, 18.115234, 0.000000]) multmatrix(m=[[-0.272207, 0.044788, 0.961196, 0.000000], [-0.948443, 0.156055, -0.275867, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.593958, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[41.455078, 18.115234, 0.000000]) multmatrix(m=[[-0.280775, 0.046198, 0.958618, 0.000000], [-0.945900, 0.155637, -0.284550, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[42.025988, 17.951381, 0.000000]) multmatrix(m=[[-0.262750, 0.043232, 0.963844, 0.000000], [-0.951056, 0.156485, -0.266283, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[42.025988, 17.951381, 0.000000]) multmatrix(m=[[-0.253293, 0.041676, 0.966492, 0.000000], [-0.953669, 0.156915, -0.256698, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.585982, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[42.025988, 17.951381, 0.000000]) multmatrix(m=[[-0.262750, 0.043232, 0.963844, 0.000000], [-0.951056, 0.156485, -0.266283, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[42.592335, 17.800961, 0.000000]) multmatrix(m=[[-0.242888, 0.039964, 0.969170, 0.000000], [-0.956311, 0.157350, -0.246154, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[42.592335, 17.800961, 0.000000]) multmatrix(m=[[-0.232484, 0.038253, 0.971848, 0.000000], [-0.958954, 0.157785, -0.235610, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577836, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[42.592335, 17.800961, 0.000000]) multmatrix(m=[[-0.242888, 0.039964, 0.969170, 0.000000], [-0.956311, 0.157350, -0.246154, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[43.153903, 17.664816, 0.000000]) multmatrix(m=[[-0.221072, 0.036375, 0.974507, 0.000000], [-0.961577, 0.158216, -0.224044, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[43.153903, 17.664816, 0.000000]) multmatrix(m=[[-0.209659, 0.034497, 0.977166, 0.000000], [-0.964201, 0.158648, -0.212478, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.569582, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[43.153903, 17.664816, 0.000000]) multmatrix(m=[[-0.221072, 0.036375, 0.974507, 0.000000], [-0.961577, 0.158216, -0.224044, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[43.710480, 17.543793, 0.000000]) multmatrix(m=[[-0.197175, 0.032443, 0.979746, 0.000000], [-0.966747, 0.159067, -0.199826, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[43.710480, 17.543793, 0.000000]) multmatrix(m=[[-0.184691, 0.030389, 0.982327, 0.000000], [-0.969293, 0.159486, -0.187175, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.561289, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[43.710480, 17.543793, 0.000000]) multmatrix(m=[[-0.197175, 0.032443, 0.979746, 0.000000], [-0.966747, 0.159067, -0.199826, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[44.261849, 17.438734, 0.000000]) multmatrix(m=[[-0.171075, 0.028148, 0.984756, 0.000000], [-0.971691, 0.159880, -0.173375, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[44.261849, 17.438734, 0.000000]) multmatrix(m=[[-0.157458, 0.025908, 0.987186, 0.000000], [-0.974088, 0.160275, -0.159575, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.553034, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[44.261849, 17.438734, 0.000000]) multmatrix(m=[[-0.171075, 0.028148, 0.984756, 0.000000], [-0.971691, 0.159880, -0.173375, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[44.807796, 17.350483, 0.000000]) multmatrix(m=[[-0.142650, 0.023471, 0.989379, 0.000000], [-0.976252, 0.160631, -0.144568, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[44.807796, 17.350483, 0.000000]) multmatrix(m=[[-0.127842, 0.021035, 0.991571, 0.000000], [-0.978416, 0.160987, -0.129561, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.544904, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[44.807796, 17.350483, 0.000000]) multmatrix(m=[[-0.142650, 0.023471, 0.989379, 0.000000], [-0.976252, 0.160631, -0.144568, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[45.348108, 17.279885, 0.000000]) multmatrix(m=[[-0.111789, 0.018394, 0.993427, 0.000000], [-0.980246, 0.161288, -0.113293, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[45.348108, 17.279885, 0.000000]) multmatrix(m=[[-0.095737, 0.015752, 0.995282, 0.000000], [-0.982077, 0.161589, -0.097025, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.536994, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[45.348108, 17.279885, 0.000000]) multmatrix(m=[[-0.111789, 0.018394, 0.993427, 0.000000], [-0.980246, 0.161288, -0.113293, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[45.882568, 17.227783, 0.000000]) multmatrix(m=[[-0.078399, 0.012900, 0.996683, 0.000000], [-0.983459, 0.161817, -0.079453, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[45.882568, 17.227783, 0.000000]) multmatrix(m=[[-0.061061, 0.010047, 0.998083, 0.000000], [-0.984841, 0.162044, -0.061882, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.529410, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[45.882568, 17.227783, 0.000000]) multmatrix(m=[[-0.078399, 0.012900, 0.996683, 0.000000], [-0.983459, 0.161817, -0.079453, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[46.410964, 17.195022, 0.000000]) multmatrix(m=[[-0.042411, 0.006978, 0.998897, 0.000000], [-0.985644, 0.162176, -0.042982, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[46.410964, 17.195022, 0.000000]) multmatrix(m=[[-0.023761, 0.003910, 0.999710, 0.000000], [-0.986446, 0.162308, -0.024081, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.522267, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[46.410964, 17.195022, 0.000000]) multmatrix(m=[[-0.042411, 0.006978, 0.998897, 0.000000], [-0.985644, 0.162176, -0.042982, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[46.933079, 17.182446, 0.000000]) multmatrix(m=[[-0.003795, 0.000624, 0.999788, 0.000000], [-0.986523, 0.162321, -0.003846, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[46.933079, 17.182446, 0.000000]) multmatrix(m=[[0.016172, -0.002661, 0.999866, 0.000000], [-0.986600, 0.162333, 0.016390, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.515690, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[46.933079, 17.182446, 0.000000]) multmatrix(m=[[-0.003795, 0.000624, 0.999788, 0.000000], [-0.986523, 0.162321, -0.003846, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[47.448699, 17.190897, 0.000000]) multmatrix(m=[[0.037432, -0.006159, 0.999048, 0.000000], [-0.985793, 0.162201, 0.037935, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[47.448699, 17.190897, 0.000000]) multmatrix(m=[[0.058692, -0.009657, 0.998229, 0.000000], [-0.984985, 0.162068, 0.059481, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.509814, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[47.448699, 17.190897, 0.000000]) multmatrix(m=[[0.037432, -0.006159, 0.999048, 0.000000], [-0.985793, 0.162201, 0.037935, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[47.957611, 17.221222, 0.000000]) multmatrix(m=[[0.081188, -0.013358, 0.996347, 0.000000], [-0.983128, 0.161762, 0.082279, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[47.957611, 17.221222, 0.000000]) multmatrix(m=[[0.103683, -0.017060, 0.994464, 0.000000], [-0.981270, 0.161456, 0.105077, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.504782, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[47.957611, 17.221222, 0.000000]) multmatrix(m=[[0.081188, -0.013358, 0.996347, 0.000000], [-0.983128, 0.161762, 0.082279, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[48.459599, 17.274263, 0.000000]) multmatrix(m=[[0.127314, -0.020948, 0.991347, 0.000000], [-0.978194, 0.160950, 0.129026, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[48.459599, 17.274263, 0.000000]) multmatrix(m=[[0.150946, -0.024836, 0.988230, 0.000000], [-0.975119, 0.160444, 0.152976, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.500743, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[48.459599, 17.274263, 0.000000]) multmatrix(m=[[0.127314, -0.020948, 0.991347, 0.000000], [-0.978194, 0.160950, 0.129026, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[48.954449, 17.350864, 0.000000]) multmatrix(m=[[0.188300, -0.030982, 0.980865, 0.000000], [-0.967851, 0.159249, 0.190831, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[48.954449, 17.350864, 0.000000]) multmatrix(m=[[0.225653, -0.037129, 0.973500, 0.000000], [-0.960584, 0.158053, 0.228687, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.993761, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[48.954449, 17.350864, 0.000000]) multmatrix(m=[[0.188300, -0.030982, 0.980865, 0.000000], [-0.967851, 0.159249, 0.190831, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[49.921875, 17.578125, 0.000000]) multmatrix(m=[[0.277547, -0.045667, 0.958060, 0.000000], [-0.945348, 0.155546, 0.281278, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[49.921875, 17.578125, 0.000000]) multmatrix(m=[[0.329440, -0.054205, 0.942619, 0.000000], [-0.930113, 0.153039, 0.333870, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.993294, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[49.921875, 17.578125, 0.000000]) multmatrix(m=[[0.277547, -0.045667, 0.958060, 0.000000], [-0.945348, 0.155546, 0.281278, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[50.858173, 17.909756, 0.000000]) multmatrix(m=[[0.368728, -0.060670, 0.926561, 0.000000], [-0.914268, 0.150432, 0.373686, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[50.858173, 17.909756, 0.000000]) multmatrix(m=[[0.408017, -0.067134, 0.910503, 0.000000], [-0.898423, 0.147825, 0.413503, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.500756, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[50.858173, 17.909756, 0.000000]) multmatrix(m=[[0.368728, -0.060670, 0.926561, 0.000000], [-0.914268, 0.150432, 0.373686, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[51.314113, 18.116820, 0.000000]) multmatrix(m=[[0.433910, -0.071395, 0.897647, 0.000000], [-0.885738, 0.145738, 0.439745, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[51.314113, 18.116820, 0.000000]) multmatrix(m=[[0.459804, -0.075655, 0.884792, 0.000000], [-0.873053, 0.143651, 0.465986, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.505785, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[51.314113, 18.116820, 0.000000]) multmatrix(m=[[0.433910, -0.071395, 0.897647, 0.000000], [-0.885738, 0.145738, 0.439745, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[51.761627, 18.352509, 0.000000]) multmatrix(m=[[0.485032, -0.079806, 0.870352, 0.000000], [-0.858804, 0.141306, 0.491554, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[51.761627, 18.352509, 0.000000]) multmatrix(m=[[0.510261, -0.083957, 0.855912, 0.000000], [-0.844556, 0.138962, 0.517122, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.512756, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[51.761627, 18.352509, 0.000000]) multmatrix(m=[[0.485032, -0.079806, 0.870352, 0.000000], [-0.858804, 0.141306, 0.491554, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[52.200501, 18.617666, 0.000000]) multmatrix(m=[[0.534529, -0.087950, 0.840052, 0.000000], [-0.828907, 0.136387, 0.541716, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[52.200501, 18.617666, 0.000000]) multmatrix(m=[[0.558796, -0.091943, 0.824192, 0.000000], [-0.813257, 0.133812, 0.566310, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.521746, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[52.200501, 18.617666, 0.000000]) multmatrix(m=[[0.534529, -0.087950, 0.840052, 0.000000], [-0.828907, 0.136387, 0.541716, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[52.630520, 18.913136, 0.000000]) multmatrix(m=[[0.581846, -0.095736, 0.807126, 0.000000], [-0.796418, 0.131041, 0.589670, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[52.630520, 18.913136, 0.000000]) multmatrix(m=[[0.604896, -0.099529, 0.790060, 0.000000], [-0.779578, 0.128270, 0.613029, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.532807, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[52.630520, 18.913136, 0.000000]) multmatrix(m=[[0.581846, -0.095736, 0.807126, 0.000000], [-0.796418, 0.131041, 0.589670, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[53.051469, 19.239762, 0.000000]) multmatrix(m=[[0.626522, -0.103087, 0.772035, 0.000000], [-0.761792, 0.125344, 0.634946, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[53.051469, 19.239762, 0.000000]) multmatrix(m=[[0.648149, -0.106645, 0.754009, 0.000000], [-0.744006, 0.122417, 0.656864, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.545969, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[53.051469, 19.239762, 0.000000]) multmatrix(m=[[0.626522, -0.103087, 0.772035, 0.000000], [-0.761792, 0.125344, 0.634946, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[53.463135, 19.598389, 0.000000]) multmatrix(m=[[0.668204, -0.109945, 0.735290, 0.000000], [-0.725535, 0.119378, 0.677189, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[53.463135, 19.598389, 0.000000]) multmatrix(m=[[0.688260, -0.113245, 0.716571, 0.000000], [-0.707064, 0.116339, 0.697514, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.561238, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[53.463135, 19.598389, 0.000000]) multmatrix(m=[[0.668204, -0.109945, 0.735290, 0.000000], [-0.725535, 0.119378, 0.677189, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[53.865302, 19.989860, 0.000000]) multmatrix(m=[[0.706658, -0.116272, 0.697425, 0.000000], [-0.688172, 0.113231, 0.716159, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[53.865302, 19.989860, 0.000000]) multmatrix(m=[[0.725056, -0.119299, 0.678279, 0.000000], [-0.669279, 0.110122, 0.734805, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.578602, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[53.865302, 19.989860, 0.000000]) multmatrix(m=[[0.706658, -0.116272, 0.697425, 0.000000], [-0.688172, 0.113231, 0.716159, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[54.257755, 20.415020, 0.000000]) multmatrix(m=[[0.741766, -0.122049, 0.658959, 0.000000], [-0.650217, 0.106985, 0.751740, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[54.257755, 20.415020, 0.000000]) multmatrix(m=[[0.758476, -0.124798, 0.639640, 0.000000], [-0.631154, 0.103849, 0.768674, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.598033, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[54.257755, 20.415020, 0.000000]) multmatrix(m=[[0.741766, -0.122049, 0.658959, 0.000000], [-0.650217, 0.106985, 0.751740, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[54.640281, 20.874712, 0.000000]) multmatrix(m=[[0.773517, -0.127273, 0.620379, 0.000000], [-0.612148, 0.100722, 0.783918, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[54.640281, 20.874712, 0.000000]) multmatrix(m=[[0.788558, -0.129748, 0.601117, 0.000000], [-0.593142, 0.097594, 0.799161, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.619486, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[54.640281, 20.874712, 0.000000]) multmatrix(m=[[0.773517, -0.127273, 0.620379, 0.000000], [-0.612148, 0.100722, 0.783918, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[55.012665, 21.369781, 0.000000]) multmatrix(m=[[0.801989, -0.131958, 0.582112, 0.000000], [-0.574389, 0.094509, 0.812772, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[55.012665, 21.369781, 0.000000]) multmatrix(m=[[0.815420, -0.134168, 0.563107, 0.000000], [-0.555636, 0.091423, 0.826384, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.642909, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[55.012665, 21.369781, 0.000000]) multmatrix(m=[[0.801989, -0.131958, 0.582112, 0.000000], [-0.574389, 0.094509, 0.812772, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[55.374691, 21.901071, 0.000000]) multmatrix(m=[[0.827328, -0.136127, 0.544524, 0.000000], [-0.537299, 0.088406, 0.838453, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[55.374691, 21.901071, 0.000000]) multmatrix(m=[[0.839237, -0.138087, 0.525940, 0.000000], [-0.518962, 0.085389, 0.850522, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.668242, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[55.374691, 21.901071, 0.000000]) multmatrix(m=[[0.827328, -0.136127, 0.544524, 0.000000], [-0.537299, 0.088406, 0.838453, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[55.726147, 22.469425, 0.000000]) multmatrix(m=[[0.849732, -0.139813, 0.507908, 0.000000], [-0.501169, 0.082461, 0.861157, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[55.726147, 22.469425, 0.000000]) multmatrix(m=[[0.860226, -0.141540, 0.489875, 0.000000], [-0.483375, 0.079534, 0.871793, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.695421, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[55.726147, 22.469425, 0.000000]) multmatrix(m=[[0.849732, -0.139813, 0.507908, 0.000000], [-0.501169, 0.082461, 0.861157, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[56.066816, 23.075688, 0.000000]) multmatrix(m=[[0.869425, -0.143054, 0.472490, 0.000000], [-0.466221, 0.076711, 0.881115, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[56.066816, 23.075688, 0.000000]) multmatrix(m=[[0.878624, -0.144567, 0.455105, 0.000000], [-0.449066, 0.073889, 0.890438, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.724380, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[56.066816, 23.075688, 0.000000]) multmatrix(m=[[0.869425, -0.143054, 0.472490, 0.000000], [-0.466221, 0.076711, 0.881115, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[56.396484, 23.720703, 0.000000]) multmatrix(m=[[0.886650, -0.145888, 0.438434, 0.000000], [-0.432617, 0.071182, 0.898572, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[56.396484, 23.720703, 0.000000]) multmatrix(m=[[0.894676, -0.147208, 0.421763, 0.000000], [-0.416167, 0.068475, 0.906706, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.755054, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[56.396484, 23.720703, 0.000000]) multmatrix(m=[[0.886650, -0.145888, 0.438434, 0.000000], [-0.432617, 0.071182, 0.898572, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[56.714938, 24.405315, 0.000000]) multmatrix(m=[[0.901651, -0.148356, 0.405847, 0.000000], [-0.400462, 0.065891, 0.913775, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[56.714938, 24.405315, 0.000000]) multmatrix(m=[[0.908626, -0.149504, 0.389931, 0.000000], [-0.384758, 0.063307, 0.920844, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.787378, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[56.714938, 24.405315, 0.000000]) multmatrix(m=[[0.901651, -0.148356, 0.405847, 0.000000], [-0.400462, 0.065891, 0.913775, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.021961, 25.130367, 0.000000]) multmatrix(m=[[0.914667, -0.150498, 0.374792, 0.000000], [-0.369819, 0.060849, 0.926965, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.021961, 25.130367, 0.000000]) multmatrix(m=[[0.920707, -0.151491, 0.359652, 0.000000], [-0.354880, 0.058391, 0.933087, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.821292, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.021961, 25.130367, 0.000000]) multmatrix(m=[[0.914667, -0.150498, 0.374792, 0.000000], [-0.369819, 0.060849, 0.926965, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.317340, 25.896704, 0.000000]) multmatrix(m=[[0.925921, -0.152349, 0.345291, 0.000000], [-0.340710, 0.056060, 0.938371, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.317340, 25.896704, 0.000000]) multmatrix(m=[[0.931135, -0.153207, 0.330930, 0.000000], [-0.326539, 0.053728, 0.943655, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.856738, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.317340, 25.896704, 0.000000]) multmatrix(m=[[0.925921, -0.152349, 0.345291, 0.000000], [-0.340710, 0.056060, 0.938371, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.600861, 26.705170, 0.000000]) multmatrix(m=[[0.935624, -0.153946, 0.317338, 0.000000], [-0.313128, 0.051522, 0.948204, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.600861, 26.705170, 0.000000]) multmatrix(m=[[0.940112, -0.154684, 0.303747, 0.000000], [-0.299717, 0.049315, 0.952753, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.893661, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.600861, 26.705170, 0.000000]) multmatrix(m=[[0.935624, -0.153946, 0.317338, 0.000000], [-0.313128, 0.051522, 0.948204, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.872307, 27.556608, 0.000000]) multmatrix(m=[[0.943965, -0.155318, 0.290905, 0.000000], [-0.287046, 0.047230, 0.956658, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.872307, 27.556608, 0.000000]) multmatrix(m=[[0.947818, -0.155952, 0.278064, 0.000000], [-0.274375, 0.045145, 0.960563, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.932011, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.872307, 27.556608, 0.000000]) multmatrix(m=[[0.943965, -0.155318, 0.290905, 0.000000], [-0.287046, 0.047230, 0.956658, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.131466, 28.451862, 0.000000]) multmatrix(m=[[0.951117, -0.156495, 0.265946, 0.000000], [-0.262418, 0.043178, 0.963906, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.131466, 28.451862, 0.000000]) multmatrix(m=[[0.954416, -0.157038, 0.253829, 0.000000], [-0.250461, 0.041210, 0.967249, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.971741, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.131466, 28.451862, 0.000000]) multmatrix(m=[[0.951117, -0.156495, 0.265946, 0.000000], [-0.262418, 0.043178, 0.963906, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.378122, 29.391778, 0.000000]) multmatrix(m=[[0.956569, -0.157392, 0.245204, 0.000000], [-0.241951, 0.039810, 0.969431, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.378122, 29.391778, 0.000000]) multmatrix(m=[[0.958721, -0.157746, 0.236579, 0.000000], [-0.233440, 0.038410, 0.971612, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.501197, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.378122, 29.391778, 0.000000]) multmatrix(m=[[0.956569, -0.157392, 0.245204, 0.000000], [-0.241951, 0.039810, 0.969431, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.496694, 29.878747, 0.000000]) multmatrix(m=[[0.960021, -0.157960, 0.231034, 0.000000], [-0.227968, 0.037510, 0.972929, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.496694, 29.878747, 0.000000]) multmatrix(m=[[0.961320, -0.158174, 0.225489, 0.000000], [-0.222497, 0.036609, 0.974246, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.511627, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.496694, 29.878747, 0.000000]) multmatrix(m=[[0.960021, -0.157960, 0.231034, 0.000000], [-0.227968, 0.037510, 0.972929, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.612061, 30.377197, 0.000000]) multmatrix(m=[[0.962518, -0.158371, 0.220107, 0.000000], [-0.217187, 0.035735, 0.975460, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.612061, 30.377197, 0.000000]) multmatrix(m=[[0.963716, -0.158568, 0.214725, 0.000000], [-0.211876, 0.034862, 0.976675, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.522219, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.612061, 30.377197, 0.000000]) multmatrix(m=[[0.962518, -0.158371, 0.220107, 0.000000], [-0.217187, 0.035735, 0.975460, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.724194, 30.887235, 0.000000]) multmatrix(m=[[0.964821, -0.158750, 0.209501, 0.000000], [-0.206722, 0.034014, 0.977794, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.724194, 30.887235, 0.000000]) multmatrix(m=[[0.965925, -0.158932, 0.204277, 0.000000], [-0.201567, 0.033165, 0.978913, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.532969, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.724194, 30.887235, 0.000000]) multmatrix(m=[[0.964821, -0.158750, 0.209501, 0.000000], [-0.206722, 0.034014, 0.977794, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.833067, 31.408966, 0.000000]) multmatrix(m=[[0.966942, -0.159099, 0.199208, 0.000000], [-0.196565, 0.032342, 0.979944, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.833067, 31.408966, 0.000000]) multmatrix(m=[[0.967959, -0.159266, 0.194138, 0.000000], [-0.191562, 0.031519, 0.980974, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.543876, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.833067, 31.408966, 0.000000]) multmatrix(m=[[0.966942, -0.159099, 0.199208, 0.000000], [-0.196565, 0.032342, 0.979944, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.938654, 31.942494, 0.000000]) multmatrix(m=[[0.968895, -0.159420, 0.189217, 0.000000], [-0.186707, 0.030720, 0.981922, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.938654, 31.942494, 0.000000]) multmatrix(m=[[0.969830, -0.159574, 0.184297, 0.000000], [-0.181852, 0.029922, 0.982871, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.554938, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.938654, 31.942494, 0.000000]) multmatrix(m=[[0.968895, -0.159420, 0.189217, 0.000000], [-0.186707, 0.030720, 0.981922, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.040928, 32.487926, 0.000000]) multmatrix(m=[[0.970690, -0.159716, 0.179522, 0.000000], [-0.177140, 0.029146, 0.983742, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.040928, 32.487926, 0.000000]) multmatrix(m=[[0.971550, -0.159857, 0.174747, 0.000000], [-0.172428, 0.028371, 0.984613, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.566153, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.040928, 32.487926, 0.000000]) multmatrix(m=[[0.970690, -0.159716, 0.179522, 0.000000], [-0.177140, 0.029146, 0.983742, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.139861, 33.045368, 0.000000]) multmatrix(m=[[0.972339, -0.159987, 0.170112, 0.000000], [-0.167855, 0.027619, 0.985413, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.139861, 33.045368, 0.000000]) multmatrix(m=[[0.973129, -0.160117, 0.165477, 0.000000], [-0.163282, 0.026866, 0.986214, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577518, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.139861, 33.045368, 0.000000]) multmatrix(m=[[0.972339, -0.159987, 0.170112, 0.000000], [-0.167855, 0.027619, 0.985413, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.235427, 33.614924, 0.000000]) multmatrix(m=[[0.973853, -0.160236, 0.160979, 0.000000], [-0.158843, 0.026136, 0.986947, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.235427, 33.614924, 0.000000]) multmatrix(m=[[0.974577, -0.160355, 0.156481, 0.000000], [-0.154405, 0.025405, 0.987681, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.589033, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.235427, 33.614924, 0.000000]) multmatrix(m=[[0.973853, -0.160236, 0.160979, 0.000000], [-0.158843, 0.026136, 0.986947, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.327600, 34.196700, 0.000000]) multmatrix(m=[[0.975240, -0.160464, 0.152115, 0.000000], [-0.150096, 0.024697, 0.988353, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.327600, 34.196700, 0.000000]) multmatrix(m=[[0.975903, -0.160573, 0.147748, 0.000000], [-0.145788, 0.023988, 0.989025, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.600694, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.327600, 34.196700, 0.000000]) multmatrix(m=[[0.975240, -0.160464, 0.152115, 0.000000], [-0.150096, 0.024697, 0.988353, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.416351, 34.790802, 0.000000]) multmatrix(m=[[0.976509, -0.160673, 0.143510, 0.000000], [-0.141606, 0.023300, 0.989640, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.416351, 34.790802, 0.000000]) multmatrix(m=[[0.977116, -0.160773, 0.139271, 0.000000], [-0.137424, 0.022611, 0.990254, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.612502, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.416351, 34.790802, 0.000000]) multmatrix(m=[[0.976509, -0.160673, 0.143510, 0.000000], [-0.141606, 0.023300, 0.989640, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.501655, 35.397335, 0.000000]) multmatrix(m=[[0.977670, -0.160864, 0.135157, 0.000000], [-0.133363, 0.021943, 0.990816, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.501655, 35.397335, 0.000000]) multmatrix(m=[[0.978224, -0.160955, 0.131042, 0.000000], [-0.129303, 0.021275, 0.991377, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.624454, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.501655, 35.397335, 0.000000]) multmatrix(m=[[0.977670, -0.160864, 0.135157, 0.000000], [-0.133363, 0.021943, 0.990816, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.583485, 36.016405, 0.000000]) multmatrix(m=[[0.978729, -0.161038, 0.127047, 0.000000], [-0.125361, 0.020627, 0.991889, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.583485, 36.016405, 0.000000]) multmatrix(m=[[0.979233, -0.161121, 0.123052, 0.000000], [-0.121419, 0.019978, 0.992400, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.636549, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.583485, 36.016405, 0.000000]) multmatrix(m=[[0.978729, -0.161038, 0.127047, 0.000000], [-0.125361, 0.020627, 0.991889, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.661814, 36.648116, 0.000000]) multmatrix(m=[[0.979693, -0.161197, 0.119172, 0.000000], [-0.117591, 0.019348, 0.992866, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.661814, 36.648116, 0.000000]) multmatrix(m=[[0.980152, -0.161273, 0.115293, 0.000000], [-0.113763, 0.018718, 0.993332, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.648786, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.661814, 36.648116, 0.000000]) multmatrix(m=[[0.979693, -0.161197, 0.119172, 0.000000], [-0.117591, 0.019348, 0.992866, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.736614, 37.292576, 0.000000]) multmatrix(m=[[0.980570, -0.161341, 0.111526, 0.000000], [-0.110046, 0.018107, 0.993754, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.736614, 37.292576, 0.000000]) multmatrix(m=[[0.980987, -0.161410, 0.107758, 0.000000], [-0.106329, 0.017495, 0.994177, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.661162, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.736614, 37.292576, 0.000000]) multmatrix(m=[[0.980570, -0.161341, 0.111526, 0.000000], [-0.110046, 0.018107, 0.993754, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.807860, 37.949888, 0.000000]) multmatrix(m=[[0.981365, -0.161472, 0.104099, 0.000000], [-0.102718, 0.016901, 0.994560, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.807860, 37.949888, 0.000000]) multmatrix(m=[[0.981743, -0.161534, 0.100440, 0.000000], [-0.099107, 0.016307, 0.994943, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.673678, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.807860, 37.949888, 0.000000]) multmatrix(m=[[0.981365, -0.161472, 0.104099, 0.000000], [-0.102718, 0.016901, 0.994560, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.875524, 38.620160, 0.000000]) multmatrix(m=[[0.982084, -0.161590, 0.096885, 0.000000], [-0.095600, 0.015730, 0.995289, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.875524, 38.620160, 0.000000]) multmatrix(m=[[0.982425, -0.161647, 0.093330, 0.000000], [-0.092092, 0.015153, 0.995635, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.686331, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.875524, 38.620160, 0.000000]) multmatrix(m=[[0.982084, -0.161590, 0.096885, 0.000000], [-0.095600, 0.015730, 0.995289, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -0.010000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.939580, 39.303495, 0.000000]) multmatrix(m=[[0.982425, -0.161647, 0.093330, 0.000000], [-0.092092, 0.015153, 0.995635, 0.000000], [-0.162355, -0.986732, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, 0.010000]) translate(v=[-500.000000, -500.000000, -1000.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } }
